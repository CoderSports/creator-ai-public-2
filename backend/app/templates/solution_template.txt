# Solution for Python Learning Project: {project_title}

# This file contains the complete solution to the {project_title} project.
# The goal is to present the full working code that students will achieve 
# by the end of the lesson. Ensure that the solution is consistent with the lesson 
# objectives, the complexity level, and follows best practices for teaching students 
# aged 8-16.

# Instructions to OpenAI:
# - This code is a representative example. Adjust the logic and functions based on the specific project.
# - Ensure the solution matches the learning objectives and the PRIMM/EBL frameworks.
# - Generate unique solutions for each project, considering edge cases, alternative solutions, and creative extensions.
# - The solution should reinforce incremental learning, focusing on guiding students through manageable steps.

# Example Solution for {lesson_title}

def calculate_area_of_circle(radius):
    """
    Function to calculate the area of a circle given its radius.
    Demonstrates the use of basic mathematical operations and function design.
    Formula: Area = Ï€ * r^2
    Includes error handling for invalid input (e.g., negative numbers).
    """
    if radius < 0:
        return "Invalid radius. Please provide a non-negative value."
    area = 3.14159 * (radius ** 2)
    return area

def main():
    """
    Main function for testing the `calculate_area_of_circle` function.
    Demonstrates the concept of user input and program output.
    Provides an example of error handling in Python using try-except blocks.
    """
    try:
        # Ask the user to input a radius
        radius = float(input("Enter the radius of the circle: "))
        
        # Call the function and store the result
        result = calculate_area_of_circle(radius)
        
        # Display the result
        print(f"The area of a circle with radius {radius} is {result}")
    
    except ValueError:
        # Handle the case where the user input is not a valid number
        print("Invalid input. Please enter a numeric value for the radius.")

if __name__ == "__main__":
    main()
